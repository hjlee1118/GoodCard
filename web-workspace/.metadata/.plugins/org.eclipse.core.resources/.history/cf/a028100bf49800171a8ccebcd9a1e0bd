package kr.co.goodcard.controller;

import java.io.File;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;

import kr.co.goodcard.vo.CreditCard;
import kr.co.goodcard.vo.mongo.AnnualFee;
import kr.co.goodcard.vo.mongo.Benefits;
import kr.co.goodcard.vo.mongo.LimitBenefit;
import kr.co.goodcard.vo.mongo.SpecialService;

@Controller
public class CardController {

	/**
	 * 신용카드의 요청을 처리
	 * */
	
	@RequestMapping("credit.do")
	public String creditCardPageTest(@RequestParam("pageNo") int no, Model model) {
		try {
			BasicDBObject searchQuery = new BasicDBObject();
			searchQuery.put("brand", "하나카드");

			int totalCnt = creditCardCnt(searchQuery);
			int totalPageCnt = 0;
			

			if(totalCnt % 10 == 0){
				totalPageCnt = totalCnt/10;
			}else{
				totalPageCnt = totalCnt/10 + 1;
			}
			
			List<CreditCard> creditCardList = cardList(searchQuery, no);
			model.addAttribute("creditCardList", creditCardList);
			model.addAttribute("totalCnt", totalCnt);
			model.addAttribute("totalPageCnt", totalPageCnt);
			return "credit/list";
		} catch (Exception e) {

		}
		return "redirect:/";
	}
	
	@RequestMapping("credit.do/${id}")
	public String creditCardDetail(@PathVariable String id, Model model){
		try{
			BasicDBObject searchQuery = new BasicDBObject();
			searchQuery.put("__id", id);
			CreditCard creditCard = cardDetail(searchQuery);
			
			
			
		}catch (Exception e) {

		}
		
		return "credit/detail";
	}
	
	public static int creditCardCnt(BasicDBObject searchQuery){
		MongoClient mongo = new MongoClient("52.79.221.214", 27017);
		DB db = mongo.getDB("hana");
		
		DBCollection collection = db.getCollection("creditCard");
		
		int count = collection.find(searchQuery).count();
		
		return count;
	}
	
	public static CreditCard cardDetail(BasicDBObject searchQuery){
		
		MongoClient mongo = new MongoClient("52.79.221.214", 27017);
		DB db = mongo.getDB("hana");
	
		//get a single collection
		DBCollection collection = db.getCollection("creditCard");	
		DBCursor cursor = collection.find(searchQuery);
		
		BasicDBObject cardDBObject = (BasicDBObject) cursor.next();
		CreditCard creditCard = new CreditCard();
		
		creditCard.setId(cardDBObject.getString("_id"));
		creditCard.setBrand(cardDBObject.getString("brand"));
		creditCard.setCardType(cardDBObject.getString("cardType"));
		creditCard.setCardName(cardDBObject.getString("cardName"));
		creditCard.setAnnotation(cardDBObject.getString("annotation"));
		File imagePath = new File(cardDBObject.getString("imagePath"));
		creditCard.setImagePath(imagePath.getName());
		creditCard.setAnnualFee((List<AnnualFee>) cardDBObject.get("annualFee"));
		creditCard.setLimitBenefit((List<LimitBenefit>) cardDBObject.get("limitBenefit"));
		creditCard.setSpecialServices((List<SpecialService>) cardDBObject.get("specialService"));
		creditCard.setBenefits((List<Benefits>) cardDBObject.get("benefits"));
		creditCard.setViewCount(cardDBObject.getInt("viewCount"));
		creditCard.setHomepageURL("https://www.hanacard.co.kr/");
		
		mongo.close();
		
		return creditCard;
		
	}
	
	public static List<CreditCard> cardList(BasicDBObject searchQuery, int pageNo){
		try{
		MongoClient mongo = new MongoClient("52.79.221.214", 27017);
		DB db = mongo.getDB("hana");
	
		//get a single collection
		DBCollection collection = db.getCollection("creditCard");		
		int skipPage = (pageNo-1)*10;
		DBCursor cursor = collection.find(searchQuery).skip(skipPage).limit(10);
		
		List<CreditCard> list = new ArrayList<>();
		
		while (cursor.hasNext()) {

			BasicDBObject cardDBObject = (BasicDBObject) cursor.next();
			CreditCard creditCard = new CreditCard();

			creditCard.setId(cardDBObject.getString("_id"));
			creditCard.setBrand(cardDBObject.getString("brand"));
			creditCard.setCardType(cardDBObject.getString("cardType"));
			creditCard.setCardName(cardDBObject.getString("cardName"));
			creditCard.setAnnotation(cardDBObject.getString("annotation"));
			File imagePath = new File(cardDBObject.getString("imagePath"));
			creditCard.setImagePath(imagePath.getName());
			creditCard.setAnnualFee((List<AnnualFee>) cardDBObject.get("annualFee"));
			creditCard.setLimitBenefit((List<LimitBenefit>) cardDBObject.get("limitBenefit"));
			creditCard.setSpecialServices((List<SpecialService>) cardDBObject.get("specialService"));
			creditCard.setBenefits((List<Benefits>) cardDBObject.get("benefits"));
			creditCard.setViewCount(cardDBObject.getInt("viewCount"));
			creditCard.setHomepageURL("https://www.hanacard.co.kr/");

			list.add(creditCard);
		}
		

		mongo.close();
		
		return list;		
		
		}catch (Exception e) {
			
		}
		return null;
		
	}
	
}
